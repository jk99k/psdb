# Generated by Django 3.2.7 on 2021-09-14 04:02

from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=64, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('profile', models.CharField(blank=True, max_length=256, null=True)),
                ('client', models.CharField(choices=[('1', 'Smart Phone'), ('2', 'Tablet'), ('3', 'PC')], default='1', max_length=2)),
                ('icon', models.ImageField(blank=True, null=True, upload_to=users.models.User.get_user_icon_path)),
                ('pixel_strike_id', models.IntegerField(blank=True, null=True)),
                ('when_started', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('youtube_channel', models.CharField(blank=True, max_length=128, null=True)),
                ('tiktok_account', models.CharField(blank=True, max_length=128, null=True)),
                ('discord_account', models.CharField(blank=True, max_length=128, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
    ]
